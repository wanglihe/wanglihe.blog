什么是大尾和小尾，从数的记录到“节”
##################################
:date: 2015-08-16 09:46
:author: wanglihe
:category: 从自然数到计算机
:tags: utf-8, utf8, 位序, 大尾, 字节序, 小尾, 节
:slug: 什么是大尾和小尾，从记录的节讲起
:status: published

小弟们不懂UTF-8，于是指导他们总结学习做报告，结果这帮家伙居然查了两天都说不明白大小尾，只知道“从右往左”是小尾，我真想吐他们一脸狗屎，回家吃杂碎面去吧！看了看网上好像还真没有说得比较透的，那我就给他们讲了一遍，又想了想，要不干脆写个博客吧。

说起这个大小尾，其实跟计算机没啥关系，好像好多计算机用的东西都跟计算机没关系，没办法，毕竟历史才几十年，很少有什么的真正的专业“工具”。这个东西起源于“计数”，或是精确的说是“记数”用的。最开始，每个数都有一个确定的符号表示，比如一二三四五，比如卌，表示四十。但是数是无穷无尽的，总不能创造出无穷无尽的符号吧。好在符号可以有限，但符号的组合可以无穷无尽，于是就涉及到用符号的组合表示数了。那么都是怎么组合的呢？基于人类书写的习惯，虽然也有些异类，但大体上都是按书写顺序把数拼起来。于是，每一个书写的位置就变得有意义了，可以称之为一个“阶”或者是一个“位”。每一个位上数表示这个位上的大小，而位表示大小的级别。于是，位之间的关系就需要确定一下才好表示大小，比如“123”，我们可以从左往右读成一百二十三，当然也可以从右往左读，读成三百二十一。至于表示多少，那完全是一个约定，比如先写大的，从左向右的，就是大尾表示法，从右往左的，就是小尾表示法。阿拉伯数字系统选择了大尾书写，并且使用最广，于是大家看到“123”也就都读一百二十三了。至于阿拉伯为什么文字从右向左写，而数字却是大尾，也许他们的约定其实是先写小的，并且从右往左写，与当年英特尔造cpu时的选择是一样的，他们实际选择了他们民族写法的小尾法。所以阿拉伯数字我们看着这么爽可能只是一个巧合，当然也有可能是我们教他们这么写的，他们随便一学，为了表示尊重，我们怎么写，他们就怎么学了，谁知道呢？

说完大小尾，其实还不算完，位是定下来了，那么一个位可以容纳多少个数字呢？这就涉及到“节”的大小。节有什么用呢？主要用于分割和计算。大部分书写系统其实为了方便，都选择了一个数字就作为一个节来表示，所以我们做计算时，基本是一个数字对就一个数据做计算。比如1234+4321，逐位对应，相加就可以得到5555的结果，总共计算4次。但是如果我们的相加表更大一点，可以表示两位数的加法，那么12,34+43,21就可以得到55,55，而只用计算两次。我们把“节”和“阶”统一思考一下，就可以整体理解我们是如何设计我们的书写系统和演算系统，以便使书写和演算尽量一致。总结一下，我们用一个数字作为一个节，每一个节表示一个阶，完成基本的书写计数系统，作为奖励，我们只用背乘法九九表就可以做计算，而不用背九九叉九九表，真是不错。

数学后来发展了，我们认识到各种不同的进制，而我们最习惯的叫十进制，而且不同的进制本质是没有区别的。于是为了方便，可能在不同的工程系统内，可能使用不同的进制，比如时间体系用60，12进制，角度体系用360进制，这些进制就涉及到变换，这时候节的作用又有体现了，我们总是以节为一个基本单位进行记录。比如12小时30分30秒，写下来是这样的12:30:30，我们用的是大尾，两位为一节表示。2015-08-15,或者20150815，就是大尾的年月日4，2，2分节表示。

终于说到计算机了。计算机常用的数字表示一般有二进制，八进制和十六进制。因为工程需要，常常要做换算和记录，这里又涉及到节的选择。数学上基本没什么问题，每种表示都是一个数字做为一个节，比如FE(16)对应11111110(2)。但是工程上却不是，常用的内存大小因为历史的原因，最小的存储单元是八位二进制数，也就是一个字节（byte,octet）。所以，一般内存也都是以一个字节输出的，也就是二进制以八位为一节，十六进制以二位为一节输出。混乱的来了，英特尔的x86系列cpu，内存以0向更大编址，一般从左往右写，但是任意一个二进制数是小尾，从右往左写，但是内存中的数据又是以八位为一节读取，表示成16进制，按内存顺序写出，就会出现纠结的一幕：89abcdef(16)从内存中读出变成了ef,cd,ab,89。如果我们改变分节，16个二进制位一读的话，那么写下来就是cdef,89ab。

总结一下，为了记数与计算的方便，我们发明了用位置表示阶的记数方法，一般通用情况下，我们选择了先记高阶位的数，再记低阶位的数，这其实就是“大尾”记录法（英文叫做big
endian，我不清楚哪个蠢逼翻成了大尾，其实按照中文的习惯，应该翻译成大头，中国人把开端叫做头，不叫尾），并且我们一般从左向右记录，文字也从左向右读，基于某些我也说不清楚的原因，我们把从大到小，从左到右的记录方法称为大尾记录。如果我们从右向左记录，或者从小向大记录，那么就是小尾记数（人们似乎默认了从或向右写字，觉得好扯）。如果再反一次，我们从右向左读，并且从小向大记录，那就是阿拉伯人的阿拉伯数字，还是大尾法。记录的顺序因为节的问题往往变得混乱，特别是像英特尔和阿拉伯这种，如果大尾与小尾混合，将会因为节的不同而产生不同的书写方式，制造人为的混乱。所以，无论大尾还是小尾，最好选定一个咬死不变，比如英特尔如果非要位序是从右向左也没问题，你的内存地址最好也从大向小，遍历的时候也从大向小就统一了。

好啦，以上就是大尾小尾以及节的相关知识，希望对于对此有疑问人有些帮助。
